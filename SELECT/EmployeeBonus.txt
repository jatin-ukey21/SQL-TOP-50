Table: Employee

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| empId       | int     |
| name        | varchar |
| supervisor  | int     |
| salary      | int     |
+-------------+---------+
empId is the column with unique values for this table.
Each row of this table indicates the name and the ID of an employee in addition to their salary and the id of their manager.
 

Table: Bonus

+-------------+------+
| Column Name | Type |
+-------------+------+
| empId       | int  |
| bonus       | int  |
+-------------+------+
empId is the column of unique values for this table.
empId is a foreign key (reference column) to empId from the Employee table.
Each row of this table contains the id of an employee and their respective bonus.
 

Write a solution to report the name and bonus amount of each employee with a bonus less than 1000.

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Employee table:
+-------+--------+------------+--------+
| empId | name   | supervisor | salary |
+-------+--------+------------+--------+
| 3     | Brad   | null       | 4000   |
| 1     | John   | 3          | 1000   |
| 2     | Dan    | 3          | 2000   |
| 4     | Thomas | 3          | 4000   |
+-------+--------+------------+--------+
Bonus table:
+-------+-------+
| empId | bonus |
+-------+-------+
| 2     | 500   |
| 4     | 2000  |
+-------+-------+
Output: 
+------+-------+
| name | bonus |
+------+-------+
| Brad | null  |
| John | null  |
| Dan  | 500   |
+------+-------+


ANSWER QUERY:
/* Write your PL/SQL query statement below */
SELECT E.NAME,B.BONUS FROM EMPLOYEE E
LEFT OUTER JOIN BONUS B ON
E.EMPID = B.EMPID
where B.BONUS < 1000 OR B.bonus IS NULL;;

âœ… Goal of the Query:
Get the names of employees whose bonus is less than 1000, or who donâ€™t have any bonus entry at all in the BONUS table.

ðŸ§© Step-by-step Explanation:
1. FROM EMPLOYEE E
You're starting from the EMPLOYEE table (main table).
2. LEFT OUTER JOIN BONUS B ON E.EMPID = B.EMPID
You're joining the BONUS table based on EMPID.

LEFT OUTER JOIN means:

You get all records from EMPLOYEE, even if thereâ€™s no matching row in BONUS.

If there's no match in BONUS, then B.BONUS will be NULL.

3. WHERE B.BONUS < 1000 OR B.BONUS IS NULL
Now you're filtering the results:

Show the employee if bonus is less than 1000.

Also show the employee if they have no bonus record at all (i.e., NULL).

ðŸ’¡ Why this is useful?
Letâ€™s say your company wants to:

See which employees are under-rewarded (bonus < 1000), or Have not been rewarded at all (no bonus record).
